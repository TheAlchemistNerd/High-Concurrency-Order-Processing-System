
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5' apply false
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.ecommerce'
    version = '1.0.0'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(22)
        }
        tasks.withType(JavaCompile).configureEach { options.compilerArgs << '-parameters' }
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.2.5"
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(':user-service') {
    dependencies {
        implementation project(':common')
        testImplementation testFixtures(project(':common'))
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.slf4j:slf4j-api'
        implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
        testImplementation 'org.springframework.security:spring-security-test'
    }
}

project(':product-service') {
    apply plugin: 'java-library'
    dependencies {
        implementation project(':common')
        testImplementation testFixtures(project(':common'))
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    }
}

project(':inventory-service') {
    dependencies {
        implementation project(':common')
        testImplementation testFixtures(project(':common'))
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.data:spring-data-commons'
        implementation 'org.slf4j:slf4j-api'
        implementation 'org.springframework:spring-tx'
        implementation 'org.springframework.boot:spring-boot-starter-security'
    }
}

project(':order-service') {
    dependencies {
        implementation project(':common')
        testImplementation testFixtures(project(':common'))
        implementation project(':user-service')
        implementation project(':product-service')
        implementation project(':inventory-service')
        implementation project(':payment-service')
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    }
}

project(':payment-service') {
    dependencies {
        implementation project(':common')
        testImplementation testFixtures(project(':common'))
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'com.stripe:stripe-java:24.18.0'
    }
}

project(':shopping-cart-service') {
    dependencies {
        implementation project(':common')
        testImplementation testFixtures(project(':common'))
        implementation project(':user-service')
        implementation project(':product-service')
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    }
}

project(':common') {
    apply plugin: 'java-test-fixtures'
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        testFixturesImplementation 'org.testcontainers:postgresql'
        testFixturesImplementation 'org.testcontainers:junit-jupiter'
        testFixturesImplementation 'org.springframework:spring-test'
    }
}

project(':app') {
    apply plugin: 'org.springframework.boot'

    dependencies {
        implementation project(':common')
        testImplementation testFixtures(project(':common'))
        implementation project(':user-service')
        implementation project(':product-service')
        implementation project(':inventory-service')
        implementation project(':order-service')
        implementation project(':payment-service')
        implementation project(':shopping-cart-service')
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'io.micrometer:micrometer-registry-prometheus'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
        runtimeOnly 'org.postgresql:postgresql'

        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.springframework.security:spring-security-test'
    }

    bootJar {
        enabled = true
        mainClass = 'com.ecommerce.orderprocessing.EcommerceOrderProcessingApplication'
    }
}